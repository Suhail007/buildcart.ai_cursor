name: Pull Request Validation

on:
  pull_request:
    branches: [ main, develop ]

jobs:
  validate-pr:
    name: Validate Pull Request
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Check for merge conflicts
      run: |
        git fetch origin ${{ github.base_ref }}
        git merge-tree $(git merge-base HEAD origin/${{ github.base_ref }}) HEAD origin/${{ github.base_ref }} || exit 1

    - name: Check commit message format
      run: |
        git log --oneline origin/${{ github.base_ref }}..HEAD | while read line; do
          if ! echo "$line" | grep -qE '^(feat|fix|docs|style|refactor|test|chore)(\(.+\))?: .+'; then
            echo "❌ Invalid commit message format: $line"
            echo "Commit messages should follow conventional commits format: type(scope): description"
            exit 1
          fi
        done

    - name: Check for sensitive files
      run: |
        if git diff --name-only origin/${{ github.base_ref }}..HEAD | grep -E '\.(env|key|pem|p12|pfx)$'; then
          echo "❌ Sensitive files detected in changes"
          exit 1
        fi

  code-quality:
    name: Code Quality Checks
    runs-on: ubuntu-latest
    needs: validate-pr

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm install

    - name: Run ESLint (if configured)
      run: npm run lint || echo "ESLint not configured"

    - name: Check code formatting
      run: |
        if command -v prettier >/dev/null 2>&1; then
          npx prettier --check "src/**/*.{js,jsx,ts,tsx}" || exit 1
        else
          echo "Prettier not available, skipping format check"
        fi

    - name: Check for TODO comments
      run: |
        if git diff --name-only origin/${{ github.base_ref }}..HEAD | xargs grep -l "TODO\|FIXME\|HACK" 2>/dev/null; then
          echo "⚠️  TODO/FIXME/HACK comments found in changed files"
          echo "Please review and address these before merging"
        fi

  size-check:
    name: Bundle Size Check
    runs-on: ubuntu-latest
    needs: validate-pr

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install frontend dependencies
      working-directory: ./frontend
      run: npm install

    - name: Build frontend
      working-directory: ./frontend
      run: npm run build

    - name: Check bundle size
      working-directory: ./frontend
      run: |
        # This is a placeholder - you can integrate with tools like bundlewatch
        echo "Bundle size check completed"
        # Example: npx bundlewatch --config bundlewatch.json 